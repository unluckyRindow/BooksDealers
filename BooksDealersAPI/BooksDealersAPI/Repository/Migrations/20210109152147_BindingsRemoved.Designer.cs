// <auto-generated />
using System;
using BooksDealersAPI.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BooksDealersAPI.Migrations
{
    [DbContext(typeof(BooksDealersContext))]
    [Migration("20210109152147_BindingsRemoved")]
    partial class BindingsRemoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BooksDealersAPI.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BooksDealersAPI.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CommentAuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<int?>("TradeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CommentAuthorId");

                    b.HasIndex("TradeId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("BooksDealersAPI.Models.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("InitiatiorId")
                        .HasColumnType("integer");

                    b.Property<int>("InitiatorOfferId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("TargetId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetOwnerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("BooksDealersAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BooksDealersAPI.Models.Book", b =>
                {
                    b.HasOne("BooksDealersAPI.Models.User", "Owner")
                        .WithMany("UserBooks")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("BooksDealersAPI.Models.Comment", b =>
                {
                    b.HasOne("BooksDealersAPI.Models.User", "CommentAuthor")
                        .WithMany()
                        .HasForeignKey("CommentAuthorId");

                    b.HasOne("BooksDealersAPI.Models.Trade", "Trade")
                        .WithMany("Comments")
                        .HasForeignKey("TradeId");
                });
#pragma warning restore 612, 618
        }
    }
}
